name: "Auto ACR build push"
run-name: "Build tag [${{ github.event.inputs.tag }}]"

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag name to build and release (e.g., v1.0.0)"
        required: true

permissions:
  contents: write

jobs:
  create_release:
    name: Create tag & GitHub Release
    runs-on: ubuntu-latest
    outputs:
      release_url: ${{ steps.gh_release.outputs.url }}
      release_id: ${{ steps.gh_release.outputs.id }}
      upload_url: ${{ steps.gh_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create tag if not exists
        env:
          TAG_NAME: ${{ github.event.inputs.tag }}
        run: |
          if git rev-parse -q --verify "refs/tags/$TAG_NAME" >/dev/null; then
            echo "Tag $TAG_NAME already exists. Skipping."
          else
            git tag "$TAG_NAME"
            git push origin "$TAG_NAME"
          fi

      - name: Create GitHub Release
        id: gh_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.tag }}
          name: Release ${{ github.event.inputs.tag }}
          body: |
            This is an automated release for tag ${{ github.event.inputs.tag }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  workers:
    name: Worker - ${{ matrix.name }}
    runs-on: ubuntu-latest
    needs: create_release
    strategy:
      fail-fast: false
      matrix:
        name: [job-a, job-b, job-c]   
    steps:
      - uses: actions/checkout@v4

      - name: Simulate work
        run: |
          echo "Running ${{ matrix.name }}..."
          # Giả lập công việc (5-14 giây)
          sleep $((RANDOM % 10 + 5))
          echo "${{ matrix.name }} done."

      - name: Notify to Lark (per job)
        if: always()  
        uses: phuoc-le/action-lark-notify@hcphi/fix-get-logs
        with:
          columnsPerRow: 2
          token: ${{ secrets.GITHUB_TOKEN }}
          cardItems: |
            **Job**<br>${{ matrix.name }}
            **Status**<br>${{ job.status }}
            **Repo**<br>[{{GITHUB_REPOSITORY}}]({{GITHUB_SERVER_URL}}/{{GITHUB_REPOSITORY}})
            **Event**<br>{{GITHUB_EVENT_NAME}}
            **Actor**<br>{{GITHUB_ACTOR}}
            **Ref**<br>[{{GITHUB_REF}}]({{GITHUB_SERVER_URL}}/{{GITHUB_REPOSITORY}}/tree/{{GITHUB_REF_NAME}})
            **Run Logs**<br>[{{GITHUB_RUN_ID}}]({{GITHUB_JOB_URL}})
            **Tag**<br>${{ github.event.inputs.tag }}
            **Release**<br>{{RELEASE_URL}}
        env:
          LARK_WEBHOOK: ${{ secrets.LARK_WEBHOOK }}
          LARK_MESSAGE_TITLE: "${{ matrix.name }} finished"
          LARK_MESSAGE_SUBTITLE: |
            Status: ${{ job.status }}
          RELEASE_URL: ${{ needs.create_release.outputs.release_url }}

